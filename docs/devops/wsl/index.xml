<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WSL on Notebook</title><link>https://dpurge.github.io/docs/devops/wsl/</link><description>Recent content in WSL on Notebook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dpurge.github.io/docs/devops/wsl/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://dpurge.github.io/docs/devops/wsl/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/wsl/installation/</guid><description>Installation of WSL # WSL2 # Enable Windows subsystem for Linux:
Enable-WindowsOptionalFeature -Online -NoRestart -FeatureName Microsoft-Windows-Subsystem-Linux Enable-WindowsOptionalFeature -Online -NoRestart -FeatureName VirtualMachinePlatform Enable version 2 of WSL:
Invoke-WebRequest https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi -OutFile c:\wsl_update_x64.msi -UseBasicParsing Invoke-WebRequest https://... -OutFile D:\dat\WSL\kernel\vmlinux -UseBasicParsing start D:\dat\WSL\wsl_update_x64.msi wsl --set-default-version 2 Configure non-default kernel in %USERPROFILE%\.wslconfig:
[wsl2] kernel=D:\\dat\\WSL\\kernel\\vmlinux Import Ubuntu image from docker # Download image: Invoke-WebRequest https://raw.githubusercontent.com/tianon/docker-brew-ubuntu-core/fbca80af7960ffcca085d509c20f53ced1697ade/kinetic/ubuntu-kinetic-oci-amd64-root.tar.gz -OutFile C:\ubuntu-kinetic-oci-amd64-root.tar.gz -UseBasicParsing Import image: wsl --import jdp-ubuntu C:\dat\WSL\jdp-ubuntu C:\ubuntu-kinetic-oci-amd64-root.tar.gz Update system: apt-get update Import Arch image from docker # Download image: Invoke-WebRequest https://gitlab.</description></item><item><title/><link>https://dpurge.github.io/docs/devops/wsl/ubuntu2004/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/wsl/ubuntu2004/</guid><description>Ubuntu 20.04 # Invoke-WebRequest -Uri https://aka.ms/wslubuntu2004 -OutFile c:\ubuntu2004.appx -UseBasicParsing Add-AppxPackage c:\ubuntu2004.appx
# DISM.EXE /Online /Add-ProvisionedAppxPackage /PackagePath:c:\\ubuntu2004.appx /SkipLicense --AllUsers Start Ubuntu 20.04 console to install the base system, and then run:
sudo apt update sudo apt upgrade Docker in Ubuntu 20.04 # sudo apt install --no-install-recommends apt-transport-https ca-certificates curl gnupg2 net-tools source /etc/os-release curl -fsSL https://download.docker.com/linux/${ID}/gpg | sudo apt-key add - echo &amp;#34;deb [arch=amd64] https://download.docker.com/linux/${ID} ${VERSION_CODENAME} stable&amp;#34; | sudo tee /etc/apt/sources.</description></item><item><title/><link>https://dpurge.github.io/docs/devops/wsl/ubuntu2204/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/wsl/ubuntu2204/</guid><description>Ubuntu 22.04 # Update the system:
sudo apt update sudo apt -y upgrade RDP connections # Install xrdp and xwindows:
sudo apt install -y xrdp sudo apt install -y xfce4 xfce4-goodies sudo sed -i &amp;#39;s/3389/3390/g&amp;#39; /etc/xrdp/xrdp.ini sudo sed -i &amp;#39;s/max_bpp=32/max_bpp=128/g&amp;#39; /etc/xrdp/xrdp.ini sudo sed -i &amp;#39;s/xserverbpp=24/xserverbpp=128/g&amp;#39; /etc/xrdp/xrdp.ini echo xfce4-session &amp;gt; ~/.xsession Comment out and add line in /etc/xrdp/startwm.sh:
# test -x /etc/X11/Xsession &amp;amp;&amp;amp; exec /etc/X11/Xsession # exec /bin/sh /etc/X11/Xsession startxfce4 Start XRDP:</description></item></channel></rss>