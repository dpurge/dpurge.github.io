<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Packer on Notebook</title><link>https://dpurge.github.io/docs/devops/packer/</link><description>Recent content in Packer on Notebook</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://dpurge.github.io/docs/devops/packer/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://dpurge.github.io/docs/devops/packer/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/packer/installation/</guid><description> Installation # Windows $pkr_version = &amp;ldquo;1.9.4&amp;rdquo; $pkr_archive = &amp;ldquo; https://releases.hashicorp.com/packer/${pkr_version}/packer_${pkr_version}_windows_amd64.zip" Invoke-WebRequest -Uri $pkr_archive -OutFile &amp;ldquo;${pwd}/packer_${pkr_version}_windows_amd64.zip&amp;rdquo;
Add-Type -Assembly System.IO.Compression.FileSystem $zip = [IO.Compression.ZipFile]::OpenRead(&amp;quot;${pwd}/packer_${pkr_version}windows_amd64.zip&amp;rdquo;) $Executables = $zip.Entries | Where-Object {$.Name -like &amp;lsquo;*.exe&amp;rsquo;} foreach ($Executable in $Executables) { [System.IO.Compression.ZipFileExtensions]::ExtractToFile($Executable, &amp;ldquo;${pwd}/$($Executable.Name)&amp;rdquo;, $True) } $zip.Dispose() Remove-Item -Path &amp;ldquo;${pwd}/packer_${pkr_version}_windows_amd64.zip&amp;rdquo;
Linux export PACKER_VERSION=1.7.10 curl \ -sSL https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip \ -o /tmp/packer_linux_amd64.zip cd /usr/local/bin unzip /tmp/packer_linux_amd64.zip rm /tmp/packer_linux_amd64.zip Example:
packer validate src/build-agent-ubuntu.pkr.hcl packer build src/build-agent-ubuntu.pkr.hcl</description></item></channel></rss>