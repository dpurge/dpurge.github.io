<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on Notebook</title><link>https://dpurge.github.io/docs/devops/kubernetes/</link><description>Recent content in Kubernetes on Notebook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dpurge.github.io/docs/devops/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://dpurge.github.io/docs/devops/kubernetes/azure-kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/kubernetes/azure-kubernetes/</guid><description>Kubernetes on Azure # Deployment to cluster # Connect to Azure container registry:
az account set --subscription $SubscriptionID az aks get-credentials --resource-group ResGrp-Name001 --name acrname001 Create namespace YAML:
kubectl create namespace my-namespace-name -o yaml --dry-run=client Create deployment YAML:
kubectl create deployment image-name --image=acrname001.azurecr.io/image_name:1.0.0 -o yaml --dry-run=client Apply namespace YAML:
kubectl apply -f namespace.yaml kubectl get namespaces Apply deployment YAML:
kubectl apply -f image-name-deployment.yaml kubectl logs -f deployment/image-name --namespace my-namespace-name Check deployments:</description></item><item><title/><link>https://dpurge.github.io/docs/devops/kubernetes/design-patterns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/kubernetes/design-patterns/</guid><description> Kubernetes design patterns # Foundational # Health probe # Every container should implement APIs allowing the platform to observe and manage the application.
Predictable demands # Every container should declare its resource requirements and runtime dependencies and stay confined to them.
Automated placement # Declarative Deployment # Managed Lifecycle # Structural # Init Container # Sidecar # Adapter # Ambassador # Configuration # EnvVar Configuration # Immutable Configuration # Configuration Template # Configuration Resource # Behavioral # Batch Job # Stateful Service # Service Discovery # Periodic Job # Stateless Service # Singleton Service # Higher Level # Controller # Operator # Serverless Serving # Serverless Eventing # Elastic Scale # Image Builder #</description></item><item><title/><link>https://dpurge.github.io/docs/devops/kubernetes/k9s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/kubernetes/k9s/</guid><description> K9s # Home page GitHub repository Releases Installation # Windows $K9s_Version = &amp;#34;0.27.4&amp;#34; $K2s_Archive = &amp;#34;https://github.com/derailed/k9s/releases/download/v${K9s_Version}/k9s_Windows_amd64.zip&amp;#34; Invoke-WebRequest -Uri $K2s_Archive -OutFile &amp;#34;${pwd}/k9s_Windows_amd64_${K9s_Version}.zip&amp;#34; Add-Type -Assembly System.IO.Compression.FileSystem $zip = [IO.Compression.ZipFile]::OpenRead(&amp;#34;${pwd}/k9s_Windows_amd64_${K9s_Version}.zip&amp;#34;) $Executables = $zip.Entries | Where-Object {$_.Name -like &amp;#39;*.exe&amp;#39;} foreach ($Executable in $Executables) { [System.IO.Compression.ZipFileExtensions]::ExtractToFile($Executable, &amp;#34;${pwd}/$($Executable.Name)&amp;#34;, $True) } $zip.Dispose() Remove-Item -Path &amp;#34;${pwd}/k9s_Windows_amd64_${K9s_Version}.zip&amp;#34; Linux TODO</description></item><item><title/><link>https://dpurge.github.io/docs/devops/kubernetes/kubectl-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/kubernetes/kubectl-config/</guid><description> KubeCtl configuration # Configuration files # Default file:
~/.kube/config %USERPROFILE%\.kube\config Multiple files defined in environment variable:
set KUBECONFIG=%USERPROFILE%\.kube\config;%USERPROFILE%\.kube\jdpnas02.yaml KUBECONFIG=~/.kube/config:~/.kube/jdpnas02.yaml Display configured contexts:
kubectl config get-contexts Display merged configs:
kubectl config view Show current context:
kubectl config current-context Set default context:
kubectl config use-context jdpnas02</description></item><item><title/><link>https://dpurge.github.io/docs/devops/kubernetes/minikube/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/kubernetes/minikube/</guid><description> Minikube # minikube delete minikube start --memory 4096 Edit service xxx:
kubectl edit svc xxx</description></item><item><title/><link>https://dpurge.github.io/docs/devops/kubernetes/sealed-secrets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/kubernetes/sealed-secrets/</guid><description> Sealed secrets # Install kubeseal # Command line:
curl -sSL https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.19.3/kubeseal-0.19.3-linux-amd64.tar.gz -o kubeseal-linux-amd64.tar.gz tar -xf kubeseal-linux-amd64.tar.gz kubeseal mv kubeseal /usr/local/bin/ kubeseal --version Controller:
kubectl apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.19.3/controller.yaml kubectl get pods -n kube-system | grep sealed-secrets-controller kubectl logs sealed-secrets-controller-xxx-xxx -n kube-system kubectl get secret -n kube-system -l sealedsecrets.bitnami.com/sealed-secrets-key -o yaml</description></item></channel></rss>