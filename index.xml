<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notebook</title><link>https://dpurge.github.io/</link><description>Recent content on Notebook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dpurge.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://dpurge.github.io/docs/devops/azure/exploring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/azure/exploring/</guid><description>Exploring Azure resources # List subscription and tenant # az account show --query &amp;#34;{subscriptionId:id, tenantId:tenantId}&amp;#34; -o table Create service principal for RBAC # az ad sp create-for-rbac --role Contributor --name my-name-001 --scope /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx Find VM images # az vm image list-offers --publisher Canonical --location westeurope -o table az vm image list-skus --publisher Canonical --offer 0001-com-ubuntu-server-jammy --location westeurope -o table az vm image list --all --publisher Canonical --offer 0001-com-ubuntu-server-jammy --sku 22_04-lts --location westeurope -o table Refer to this image: Canonical:0001-com-ubuntu-server-jammy:22_04-lts</description></item><item><title/><link>https://dpurge.github.io/docs/devops/git/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/git/configuration/</guid><description>Configuration of git # Username and email # git config --global user.name &amp;#34;D. Purge&amp;#34; git config --global user.email &amp;#34;my@email.com&amp;#34; SSH checkouts from Azure DevOps # Generate SSH keypair:
ssh-keygen -t rsa Full parameters:
ssh-keygen \ -m PEM \ -t rsa \ -b 4096 \ -C &amp;#34;user@server.example.com&amp;#34; \ -f ~/.ssh/mykeys/privatekey \ -N passphrase Parameters:
-m PEM = format key as PEM -t RSA = type of the key, RSA format -b 4096 = number of bits in the key, 4096 bits -C &amp;ldquo; user@server.</description></item><item><title/><link>https://dpurge.github.io/docs/devops/kubernetes/azure-kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/kubernetes/azure-kubernetes/</guid><description>Kubernetes on Azure # Deployment to cluster # Connect to Azure container registry:
az account set --subscription xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx az aks get-credentials --resource-group ResGrp-Name001 --name acrname001 Create namespace YAML:
kubectl create namespace my-namespace-name -o yaml --dry-run=client Create deployment YAML:
kubectl create deployment image-name --image=acrname001.azurecr.io/image_name:1.0.0 -o yaml --dry-run=client Apply namespace YAML:
kubectl apply -f namespace.yaml kubectl get namespaces Apply deployment YAML:
kubectl apply -f image-name-deployment.yaml kubectl logs -f deployment/image-name --namespace my-namespace-name List pods:</description></item><item><title/><link>https://dpurge.github.io/docs/devops/wsl/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/wsl/installation/</guid><description>Installation of WSL # WSL2 # Enable Windows subsystem for Linux:
Enable-WindowsOptionalFeature -Online -NoRestart -FeatureName Microsoft-Windows-Subsystem-Linux Enable-WindowsOptionalFeature -Online -NoRestart -FeatureName VirtualMachinePlatform Enable version 2 of WSL:
Invoke-WebRequest https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi -OutFile c:\wsl_update_x64.msi -UseBasicParsing Invoke-WebRequest https://... -OutFile D:\dat\WSL\kernel\vmlinux -UseBasicParsing start D:\dat\WSL\wsl_update_x64.msi wsl --set-default-version 2 Configure non-default kernel in %USERPROFILE%\.wslconfig:
[wsl2] kernel=D:\\dat\\WSL\\kernel\\vmlinux Import Ubuntu image from docker # Download image: Invoke-WebRequest https://raw.githubusercontent.com/tianon/docker-brew-ubuntu-core/fbca80af7960ffcca085d509c20f53ced1697ade/kinetic/ubuntu-kinetic-oci-amd64-root.tar.gz -OutFile C:\ubuntu-kinetic-oci-amd64-root.tar.gz -UseBasicParsing Import image: wsl --import jdp-ubuntu C:\dat\WSL\jdp-ubuntu C:\ubuntu-kinetic-oci-amd64-root.tar.gz Update system: apt-get update Import Arch image from docker # Download image: Invoke-WebRequest https://gitlab.</description></item><item><title/><link>https://dpurge.github.io/docs/devops/wsl/ubuntu2004/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/wsl/ubuntu2004/</guid><description>Ubuntu 20.04 # Invoke-WebRequest -Uri https://aka.ms/wslubuntu2004 -OutFile c:\ubuntu2004.appx -UseBasicParsing Add-AppxPackage c:\ubuntu2004.appx
# DISM.EXE /Online /Add-ProvisionedAppxPackage /PackagePath:c:\\ubuntu2004.appx /SkipLicense --AllUsers Start Ubuntu 20.04 console to install the base system, and then run:
sudo apt update sudo apt upgrade Docker in Ubuntu 20.04 # sudo apt install --no-install-recommends apt-transport-https ca-certificates curl gnupg2 net-tools source /etc/os-release curl -fsSL https://download.docker.com/linux/${ID}/gpg | sudo apt-key add - echo &amp;#34;deb [arch=amd64] https://download.docker.com/linux/${ID} ${VERSION_CODENAME} stable&amp;#34; | sudo tee /etc/apt/sources.</description></item><item><title/><link>https://dpurge.github.io/docs/devops/wsl/ubuntu2204/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/devops/wsl/ubuntu2204/</guid><description>Ubuntu 22.04 # Update the system:
sudo apt update sudo apt -y upgrade RDP connections # Install xrdp and xwindows:
sudo apt install -y xrdp sudo apt install -y xfce4 xfce4-goodies sudo sed -i &amp;#39;s/3389/3390/g&amp;#39; /etc/xrdp/xrdp.ini sudo sed -i &amp;#39;s/max_bpp=32/max_bpp=128/g&amp;#39; /etc/xrdp/xrdp.ini sudo sed -i &amp;#39;s/xserverbpp=24/xserverbpp=128/g&amp;#39; /etc/xrdp/xrdp.ini echo xfce4-session &amp;gt; ~/.xsession Comment out and add line in /etc/xrdp/startwm.sh:
# test -x /etc/X11/Xsession &amp;amp;&amp;amp; exec /etc/X11/Xsession # exec /bin/sh /etc/X11/Xsession startxfce4 Start XRDP:</description></item><item><title/><link>https://dpurge.github.io/docs/programming/awk/basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/programming/awk/basics/</guid><description> Awk basics #</description></item><item><title/><link>https://dpurge.github.io/docs/programming/bash/basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/programming/bash/basics/</guid><description> Bash basics #</description></item><item><title/><link>https://dpurge.github.io/docs/programming/csharp/basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/programming/csharp/basics/</guid><description> C# Basics #</description></item><item><title/><link>https://dpurge.github.io/docs/programming/go/basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/programming/go/basics/</guid><description> Go Basics #</description></item><item><title/><link>https://dpurge.github.io/docs/programming/powershell/basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/programming/powershell/basics/</guid><description> Powershell basics #</description></item><item><title/><link>https://dpurge.github.io/docs/programming/python/basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/programming/python/basics/</guid><description>Python basics # Application structure # TODO
Class structure # TODO
Executable module # TODO</description></item><item><title/><link>https://dpurge.github.io/docs/programming/python/environment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/programming/python/environment/</guid><description>Virtual environment # TODO
Venv # Create and activate virtual environment:
Bash echo Hello Powershell python -m venv .venv .venv\Scripts\activate.ps1 Cmd echo Hello Upgrade pip and install requirements.txt:
python -m pip install --upgrade pip pip install -r requirements.txt Deactivate virtual environment:
deactivate Pipenv # TODO</description></item><item><title/><link>https://dpurge.github.io/docs/programming/python/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dpurge.github.io/docs/programming/python/installation/</guid><description>Installation # PyEnv on Windows # Copy pyenv-win from https://github.com/pyenv-win/pyenv-win/archive/master.zip to E:\pgm\pyenv-win.
Environment variables:
Name Value PYENV_HOME E:\pgm\pyenv-win PYENV_ROOT E:\pgm\pyenv-win PYENV E:\pgm\pyenv-win Add to PATH:
E:\pgm\pyenv-win\bin E:\pgm\pyenv-win\shims List available versions: pyenv install -l
Install chosen version: pyenv install 3.10.7
Set global Python version: pyenv global 3.10.7
Set local Python version: pyenv local 3.10.7
Install basic packages # pip install invoke pip install pipenv Create environment variable PIPENV_VENV_IN_PROJECT=1.</description></item></channel></rss>